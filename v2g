#!/bin/bash

# COLOR CONSTANTS
START_ERROR_COLOR="\e[38;5;160m"
START_WARNING_COLOR="\e[38;5;209m"
START_SUCCESS_COLOR="\e[38;5;119m"
START_INFO_COLOR="\e[38;5;39m"
END_COLOR="\e[0m"

# DEFAULT VALUES CONSTANTS
DEFAULT_TOP_CROP=0
DEFAULT_RIGHT_CROP=0
DEFAULT_BOTTOM_CROP=0
DEFAULT_LEFT_CROP=0

DEFAULT_START_TIME="00:00:00"
DEFAULT_LENGTH="00:00:05"
DEFAULT_WIDTH=-1
DEFAULT_HEIGHT=-1

TEMP_DIR="./tmp"
START_NUMBER=1

: <<'END'
usageFunction()
{
   echo ""
   echo "Usage: $0 -a parameterA -b parameterB -c parameterC"
   echo -e "\t-a Description of what is parameterA"
   echo -e "\t-b Description of what is parameterB"
   echo -e "\t-c Description of what is parameterC"
   exit 1 # Exit script after printing help
}
END

outputError(){
   echo -e $START_ERROR_COLOR"> ERROR:"$END_COLOR" $1"
}

outputSuccess(){
   echo -e $START_SUCCESS_COLOR"> SUCCESS:"$END_COLOR" $1"
}

outputWarning(){
   echo -e $START_WARNING_COLOR"> WARNING:"$END_COLOR" $1"
}

outputInfo(){
   echo -e $START_INFO_COLOR"> INFO:"$END_COLOR" $1"
}

outputParameters(){
   outputInfo "The folowing arguments was prossed by command to generate the file"
   echo "Start time...(-t): $INPUT_START_TIME"
   echo "Lenght.......(-l): $INPUT_TIME_LENGHT"
   echo "Input file...(-i): $INPUT_FILE"
   echo "Output file..(-o): $OUTPUT_FILE"
   echo "Width........(-w): $WIDTH"
   echo "Height.......(-h): $HEIGHT"
   echo "Crop.........(-c): "
   echo "          - TOP    ${CROP[0]}"
   echo "          - RIGHT  ${CROP[1]}"
   echo "          - BOTTOM ${CROP[2]}"
   echo "          - LEFT   ${CROP[3]}"
}


# read the options
TEMP=`getopt -o t:l:i:o:c:w:h: --long start-time:,lenght:,input:,output:,crop:,width:,height: -- "$@"`
eval set -- "$TEMP"

# extract options and their arguments into variables.
while true ; do
    case "$1" in
         -t|--start-time) INPUT_START_TIME=$2 ; shift 2 ;;
         -l|--lenght) INPUT_TIME_LENGHT=$2 ; shift 2 ;;
         -i|--input) INPUT_FILE=$2 ; shift 2 ;;
         -o|--output) OUTPUT_FILE=$2 ; shift 2 ;;
         -w|--width) WIDTH=$2 ; shift 2 ;;
         -h|--height) HEIGHT=$2 ; shift 2 ;;
         #-c|--crop) IFS=": " read -r -a CROP <<< $(sed -e 's/\"\|\[\|\]//g' <<<"$2") || outputError "tmc"; shift 2 ;;
         -c|--crop) IFS=":, " read -r -a CROP <<< $2; shift 2 ;;
         --) shift ; break ;;
         *) outputError "Unknown parameter" ; exit 1 ;; 
    esac
done


[[ -z "$INPUT_FILE" ]] && INPUT_FILE=$1
[[ -z "$OUTPUT_FILE" ]] && OUTPUT_FILE=$2

[[ -z "$INPUT_START_TIME" ]] && INPUT_START_TIME=$DEFAULT_START_TIME  # outputError "Initial time required" ; exit 1
[[ -z "$INPUT_TIME_LENGHT" ]] && INPUT_TIME_LENGHT=$DEFAULT_LENGTH
[[ -z "$WIDTH" ]] && WIDTH=$DEFAULT_WIDTH
[[ -z "$HEIGHT" ]] && HEIGHT=$DEFAULT_HEIGHT
#[[ -z "$START_NUMBER" ]] && START_NUMBER=1

[[ -z "${CROP[0]}" ]] && CROP[0]=$DEFAULT_TOP_CROP
[[ -z "${CROP[1]}" ]] && CROP[1]=$DEFAULT_RIGHT_CROP
[[ -z "${CROP[2]}" ]] && CROP[2]=$DEFAULT_BOTTOM_CROP
[[ -z "${CROP[3]}" ]] && CROP[3]=$DEFAULT_LEFT_CROP

outputParameters

# Begin script in case all parameters are correct

# Creating some reusable variables
CROP_STR="in_w-${CROP[1]}-${CROP[3]}:in_h-${CROP[2]}-${CROP[0]}:${CROP[3]}:${CROP[0]}"
outputWarning $CROP_STR
SCALE_STR="$WIDTH:$HEIGHT"

mkdir $TEMP_DIR || $(outputError "Could't create temporary folder $TEMP_DIR" && exit 1) && outputInfo "Diretório temporário criado."

ffmpeg -thread_queue_size 512 -loglevel warning -ss $INPUT_START_TIME -t $INPUT_TIME_LENGHT -i $INPUT_FILE -vf "scale=$SCALE_STR:flags=lanczos,palettegen" -y "$TEMP_DIR/palette.png" || $("Could't create pallete" ; exit 1) && outputInfo "Pallete created."

ffmpeg -thread_queue_size 512 -loglevel warning -ss $INPUT_START_TIME -t $INPUT_TIME_LENGHT -i $INPUT_FILE -i "$TEMP_DIR/palette.png" -lavfi "scale=$SCALE_STR:flags=lanczos [x]; [x][1:v] paletteuse" -y "$TEMP_DIR/frame-%d.png"

ffmpeg -thread_queue_size 512 -loglevel warning -start_number $START_NUMBER -i "$TEMP_DIR/frame-%d.png" -filter_complex "crop=$CROP_STR,scale=$SCALE_STR:-1:flags=lanczos,palettegen" -y "$TEMP_DIR/palette.png"

ffmpeg -thread_queue_size 512 -loglevel warning -start_number $START_NUMBER -i "$TEMP_DIR/frame-%d.png" -i "$TEMP_DIR/palette.png" -filter_complex "[0]crop=$CROP_STR,scale=$SCALE_STR:flags=lanczos [x]; [x][1:v] paletteuse" -y "$OUTPUT_FILE"

# Removing temporary folder after operation
rm -rf $TEMP_DIR || outputWarning "Could't remove temporary folder: $TEMP_DIR" && outputInfo "Temporary folder removed: $TEMP_DIR"

# Showing the result
ffplay -loglevel quiet -loop -1 "$OUTPUT_FILE" &


outputSuccess "Done! =)"

